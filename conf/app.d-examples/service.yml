service:
    workername : productionsrv
    brokercleanjobs : true
    administrator_mail : Me <me@domain.com>
    notifications_scan: true
    # debug_multiple_workers: false
    # 
    # Full/off hours configuration
    # CyclicJobCreator with only_off_hours parameter, use "fullhours" syntax.
    # Hours are in 24h style, one entry by line, example:
    #       - 8-12
    #       - 14-19
    # for activate off hours Cyclic only from 0 PM to 8 AM, and from 12 PM to 7 PM.
    # From time is included, end time is excluded.

javamail:
    from: Me <me@domain.com>
    server: exchange.domain.com
    debug: false
    port : 587
    auth : true
    starttls : true
    username : me
    password : mypasswd
    # groovy_debug: true

# embddb:
#    master_password_key: SetMePlease
#    durable_store_directory: /var/lib/mydmam # Only on a local disk storage, no shared, no network mounted. And never share this dir with two mydmam instances (there is a security for that).
#    # database_name: default
#    # bootstrap_nodes: 192.168.0.1, 192.168.0.2:35000 # You can add some "permanent" nodes for speedup start and node detection (IPv4 only).
#    # listen_only_from: 127.0.0.1:35000, 192.168.0.3 # You can choose to listen only from specific addresses (IPv4 only)
#    # disable_multicast_discover: true
#    # multicast_groups: 239.0.0.1:9160,[FF02::110]:9160
#    # keystore: ./conf/keystore.jks # Keystore (certificates for TLS networking)
#    # keystore_password: # Will lock/unlock keystore file is the master_password_key by default
#    # x590_principal_hostname: # Used by selfsigned CA creation, service.workername value by default, or set specific hostname.mydomain

# Options for certificate/private keys generation and TLS configuration
# Don't touch this, unless you know what you're doing.
# Default parameters should be the best setup and the more secure.
# This options must match with keystore certificates and all the others embddb nodes.
# tls_security:
#     protocol: TLSv1.2
#     private_key_size: 256
#     keygen_algorithm: EC
#     secure_random_algorithm: SHA1PRNG
#     kmf_algorithm: SunX509
#     signature_algorithm: SHA512withECDSA
#     cipher_suite:
#         - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
#         - TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
