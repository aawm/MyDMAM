<?xml version="1.0"?>
<project name="MyDMAM" default="build">
	<description>MyDMAM: Another way of looking a Digital Media Asset
		Management</description>

	<property environment="env" />

	<property name="mydmam.app" location="app" />
	<property name="mydmam.lib" location="lib" />
	<property name="mydmam.startup" location="startup" />

	<condition property="is_windows"><os family="windows"/></condition>
	<condition property="is_linux"><os family="unix"/></condition>
	<condition property="is_mac"><os family="mac"/></condition>
	
	<property name="mydmam.website.url.download" value="http://mydmam.org/dwl" />
	<property name="archive.jre.windows" value="jre-8u121-windows-x64.zip" />
	<property name="archive.jre.linux" value="jre-8u121-linux-x64.tar.gz" />
	<property name="archive.jre.mac" value="jre-8u121-macosx-x64.tar.gz" />
	<property name="archive.jre.extractedbasename" value="jre1.8.0_121" />
	
	<property name="basedir.jrebin.windows" value=".\jre\${archive.jre.extractedbasename}\bin" />
	<property name="basedir.jrebin.linux" value="./jre/${archive.jre.extractedbasename}/bin/" />
	<property name="basedir.jrebin.mac" value="./jre/${archive.jre.extractedbasename}.jre/Contents/Home/bin" />
	
	<target name="prepare" description="Prepare output directories">
		<property name="out.dir" location="build" />
		<property name="out.bin" location="${out.dir}/bin" />
		<property name="out.lib" location="${out.dir}/lib" />
		<property name="out.src" location="${out.dir}/src" />
		<property name="out.jre" location="${out.dir}/jre" />
		
		<delete dir="${out.dir}" />
		<mkdir dir="${out.dir}" />
		<mkdir dir="${out.bin}" />
		<mkdir dir="${out.lib}" />
		<mkdir dir="${out.jre}" />
	</target>

	<target name="getgitversion" depends="prepare" description="Get git last commit hash">
		<exec executable="git" outputproperty="gitversion">
			<arg value="describe" />
		</exec>
		<echo>Git version: ${gitversion}</echo>
	</target>

	<target name="checklocaljardependencies" depends="prepare" description="Test the needs to download all Play and MyDMAM dependencies or not">
		<!-- If there are some jars in lib directory -->
		<fileset dir="${mydmam.lib}" id="myfileset" includes="*.jar" />
		<pathconvert refid="myfileset" property="fileset.notempty" setonempty="false" />
		<condition property="needstodownloadjardependencies">
			<not>
				<length string="${fileset.notempty}" trim="true" length="50" when="greater" />
			</not>
		</condition>
		<condition property="notneedstodownloadjardependencies">
			<length string="${fileset.notempty}" trim="true" length="50" when="greater" />
		</condition>
	</target>

	<target name="downloadjardependencies" depends="checklocaljardependencies" description="Get all Play and MyDMAM dependencies from MyDMAM website to the build dir" if="needstodownloadjardependencies">
		<mkdir dir="${out.lib}" />
		<get src="${mydmam.websiteurldownload}/lib/" dest="${out.lib}/dependencies.xml" />
		<ant antfile="${out.lib}/dependencies.xml" />
		<delete file="${out.lib}/dependencies.xml" />
		<checksum verifyProperty="isMD5ok">
			<fileset dir="${out.lib}">
				<include name="*.jar" />
			</fileset>
		</checksum>
		<fail message="Invalid checksum for dependencies downloaded jar files.">
			<condition>
				<isfalse value="${isMD5ok}" />
			</condition>
		</fail>
		<delete>
			<fileset dir="${out.lib}" includes="*.jar.MD5" />
		</delete>

	</target>

	<target name="copylocaljardependencies" depends="checklocaljardependencies" description="Copy MyDMAM dependencies to the build dir" if="notneedstodownloadjardependencies">
		<copy todir="${out.lib}" flatten="true">
			<fileset dir="${mydmam.lib}">
				<include name="*.jar" />
			</fileset>
		</copy>
	</target>

	<target name="compile" depends="downloadjardependencies, copylocaljardependencies" description="Invoke javac for make classes">
		
		<!-- Create classpath with all MyDMAM dependencies -->
		<path id="mydmam.classpath">
			<fileset dir="${out.lib}">
				<include name="*.jar" />
			</fileset>
		</path>
		
		<javac srcdir="${mydmam.app}" destdir="${out.bin}" excludes="models react views **/*Test.java" includeantruntime="false" target="1.8">
			<classpath refid="mydmam.classpath" />
			<compilerarg value="-XDignore.symbol.file" />
		</javac>
	</target>

	<target name="makelib" depends="compile, getgitversion" description="Create MyDMAM bin jar">
		<jar basedir="${out.bin}" destfile="${out.lib}/mydmam-${gitversion}-bin.jar">
			<manifest>
				<attribute name="Main-Class" value="hd3gtv.mydmam.MainClass" />
				<attribute name="Codebase" value="mydmam.org" />
				<attribute name="Built-By" value="hdsdi3g" />
				<attribute name="Implementation-Vendor" value="MyDMAM" />
				<attribute name="Implementation-Title" value="MyDMAM" />
				<attribute name="Implementation-Version" value="${gitversion}" />
			</manifest>
		</jar>
		<delete dir="${out.bin}" />
	</target>

	<target name="getjrewindows" depends="prepare" description="Get Oracle JRE for Windows">
		<echo>You must accept the Oracle Binary Code License Agreement for Java SE to download this software.</echo>
		<echo>http://www.oracle.com/technetwork/java/javase/terms/license/index.html</echo>
		<get src="${mydmam.website.url.download}/${archive.jre.windows}" dest="${out.jre}" />
		<unzip src="${out.jre}/${archive.jre.windows}" dest="${out.jre}"/>
		<delete file="${out.jre}/${archive.jre.windows}" />
	</target>

	<target name="getjrelinux" depends="prepare" description="Get Oracle JRE for Linux">
		<echo>You must accept the Oracle Binary Code License Agreement for Java SE to download this software.</echo>
		<echo>http://www.oracle.com/technetwork/java/javase/terms/license/index.html</echo>
		<get src="${mydmam.website.url.download}/${archive.jre.linux}" dest="${out.jre}" />
		<gunzip src="${out.jre}/${archive.jre.linux}" dest="${out.jre}/jre-linux.tar"/>
		<untar src="${out.jre}/jre-linux.tar" dest="${out.jre}" />
		<delete file="${out.jre}/${archive.jre.linux}" />
		<delete file="${out.jre}/jre-linux.tar" />
	</target>

	<target name="getjremac" depends="prepare" description="Get Oracle JRE for macOS">
		<echo>You must accept the Oracle Binary Code License Agreement for Java SE to download this software.</echo>
		<echo>http://www.oracle.com/technetwork/java/javase/terms/license/index.html</echo>
		<get src="${mydmam.website.url.download}/${archive.jre.mac}" dest="${out.jre}" />
		<gunzip src="${out.jre}/${archive.jre.mac}" dest="${out.jre}/jre-mac.tar"/>
		<untar src="${out.jre}/jre-mac.tar" dest="${out.jre}"/>
		<delete file="${out.jre}/${archive.jre.mac}" />
		<delete file="${out.jre}/jre-mac.tar" />
	</target>

	<target name="makestarters" description="Prepare Windows/OSX/Linux starters">
		<echo file="${mydmam.startup}/setup.ini" append="false" force="true">working.directory=..\&#xD;&#xA;
classpath.1=..\conf&#xD;&#xA;
classpath.2=..\lib\*.jar&#xD;&#xA;
vm.location=.${basedir.jrebin.windows}\server\jvm.dll&#xD;&#xA;
vmarg.1=-Dfile.encoding=UTF-8&#xD;&#xA;
</echo>

		<!-- TODO do Debian scripts + systemD -->
		<!-- TODO osx service scripts -->
	</target>

	<target name="preparewinrun4j" description="Make winrun4j executable for the MyDMAM look" if="is_windows">
		<echo>Usage: please add to ${mydmam.startup} RCEDIT64.exe and WinRun4J64c.exe</echo>
		<property name="favicon" location="public/img/favicon.ico" />
		<!-- embed icon -->
		<exec executable="RCEDIT64.exe">
			<!-- add icon -->
			<arg value="/I"/><arg value="${mydmam.startup}/WinRun4J64c.exe"/><arg value="${favicon}"/>
		</exec>
		<copyfile src="${mydmam.startup}/WinRun4J64c.exe" dest="${mydmam.startup}/mydmam-service.exe"/>
		<move file="${mydmam.startup}/WinRun4J64c.exe" tofile="${mydmam.startup}/mydmam-cli.exe"/>
		<delete file="${mydmam.startup}/RCEDIT64.exe"/>
	</target>
	
	<target name="copyproject" depends="prepare" description="Copy all mandatory Play projet items">
		<mkdir dir="${out.dir}/app" />
		<mkdir dir="${out.dir}/app/controllers" />
		<mkdir dir="${out.dir}/app/models" />
		<mkdir dir="${out.dir}/app/views" />
		<copy todir="${out.dir}/app/views">
			<fileset dir="app/views">
			</fileset>
		</copy>

		<mkdir dir="${out.dir}/conf" />
		<copy todir="${out.dir}/conf">
			<fileset dir="conf">
				<exclude name="app.d/" />
				<exclude name="application.conf" />
				<exclude name="build.properties" />
				<exclude name="*.db" />
				<exclude name="dependencies.yml" />
				<exclude name="log4j.xml" />
				<exclude name="ssh/" />
				<exclude name="jsfiles.json" />
				<exclude name="bootstrap-ant.xml" />
			</fileset>
		</copy>
		<copy file="conf/bootstrap-ant.xml" tofile="${out.dir}/build.xml" />
		
		<copy file="LICENSE" todir="${out.dir}" />
		<copy file="UPGRADE.txt" todir="${out.dir}" />

		<mkdir dir="${out.dir}/modules" />
		<mkdir dir="${out.dir}/test" />

		<copy todir="${out.dir}/public">
			<fileset dir="public">
				<exclude name="javascripts/src/" />
				<exclude name="javascripts/_transformed/" />
				<exclude name="javascripts/_reduced/*.js" />
			</fileset>
		</copy>
		
		<mkdir dir="${out.dir}/startup" />
		<copy todir="${out.dir}/startup">
			<fileset dir="${mydmam.startup}">
				<include name="*.exe" />
				<include name="*.ini" />
				<include name="*.bat" />
				<include name="*.sh" />
			</fileset>
		</copy>
	</target>

	<target name="makesource" depends="prepare, getgitversion" description="Create MyDMAM source jar (autonomous task)">
		<mkdir dir="src" />
		<jar basedir="${mydmam.app}" destfile="src/mydmam-${gitversion}-src.jar"
			excludes="**/*Test.java">
		</jar>
	</target>

	<!-- Starts with like
		ant -Dplay="/opt/play" copyplayjars
	TODO add to doc --> 
	<target name="copyplayjars" description="Copy Play dependencies to the current lib dir (autonomous task)">
		<copy todir="${mydmam.lib}" flatten="true">
			<fileset dir="${play}/framework/lib">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${play}/framework">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${play}/modules/docviewer/lib/">
				<include name="*.jar" />
			</fileset>
		</copy>
	</target>
	
	<target name="getjreIfwindows" depends="getjrewindows" description="Get Oracle JRE for Windows, only if this is Windows" if="is_windows"></target>
	<target name="getjreIflinux" depends="getjrelinux" description="Get Oracle JRE for Linux, only if this is Linux" if="is_linux"></target>
	<target name="getjreIfmac" depends="getjremac" description="Get Oracle JRE for macOS, only if this is macOS" if="is_mac"></target>

	<target name="build" depends="makelib, makestarters, copyproject, getjreIfwindows, getjreIflinux, getjreIfmac" description="Prepare dependencies, compile, create jars, and prepare clean project">
	</target>

	<target name="pack" depends="makelib, makestarters, copyproject" description="Helper to create MyDMAM redistribuable archive without JRE">
	</target>
	<target name="pack-windows" depends="pack, getjrewindows" description="Create MyDMAM Windows redistribuable archive with JRE">
		<!-- TODO make zip -->
	</target>
	<target name="pack-linux" depends="pack, getjrelinux" description="Create MyDMAM Linux redistribuable archive with JRE">
		<!-- TODO make tar.gz -->
	</target>
	<target name="pack-mac" depends="pack, getjremac" description="Create MyDMAM macOS redistribuable archive with JRE">
		<!-- TODO make tar.gz -->
	</target>

	<!--
	TODO add doc: it needs JDK !
	-->

</project>
