/** This file is automatically generated! Do not edit. */ (function(watchfolders) { /*
 * This file is part of MyDMAM.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * Copyright (C) hdsdi3g for hd3g.tv 2015
 * 
*/
watchfolders.AbstractFoundedFile =  React.createClass({displayName: "AbstractFoundedFile",
	btnDelete: function(e) {
		e.preventDefault();
		this.props.onDelete(this.props.abstract_founded_file);
	},
	render: function() {
		var abstract_founded_file = this.props.abstract_founded_file;
		var jobs = this.props.jobs;

		var tr_classes = classNames({
		    'error': abstract_founded_file.status === "ERROR",
		    'warning': abstract_founded_file.status === "IN_PROCESSING",
		    'info': abstract_founded_file.status === "DETECTED",
		    /*'success': abstract_founded_file.status === "PROCESSED",*/
		});

		var linked_jobs = [];
		for (job_key in abstract_founded_file.map_job_target) {
			if (jobs[job_key] == null) {
				continue;
			}
			var target = abstract_founded_file.map_job_target[job_key];
			var target_profile = target.substring(target.indexOf(":") + 1, target.length);
			var target_storage = target.substring(0, target.indexOf(":"));

			linked_jobs.push(React.createElement("span", {key: job_key}, 
					React.createElement("i", {className: "icon-folder-close"}), 
					target_storage, 
					React.createElement("span", {className: "pull-right"}, 
						React.createElement("i", {className: "icon-cog"}), 
						target_profile
					), 
					React.createElement(mydmam.async.jobs.Minicartridge, {job: jobs[job_key]})
				)
			);
		}

		return (React.createElement("tr", {className: tr_classes}, 
			React.createElement("td", null, 
				React.createElement(mydmam.async.pathindex.reactStoragePathLink, {
					storagename: abstract_founded_file.storage_name, 
					path: abstract_founded_file.path, 
					add_link: abstract_founded_file.status !== "PROCESSED"})
			), 
			React.createElement("td", null, React.createElement(mydmam.async.pathindex.reactDate, {date: abstract_founded_file.date})), 
			React.createElement("td", null, React.createElement(mydmam.async.pathindex.reactFileSize, {size: abstract_founded_file.size})), 
			React.createElement("td", null, React.createElement(mydmam.async.pathindex.reactDate, {date: abstract_founded_file.last_checked})), 
			React.createElement("td", null, i18n("manager.watchfolders.status." + abstract_founded_file.status)), 
			React.createElement("td", null, linked_jobs), 
			React.createElement("td", null, React.createElement("button", {className: "btn btn-mini btn-danger pull-right", onClick: this.btnDelete}, React.createElement("i", {className: "icon-remove icon-white"})))
		));
	},
});
})(window.mydmam.async.watchfolders);
// Generated by hd3gtv.mydmam.web.JSProcessor for the module internal
// Source hash: 3074199de23c347614dce3928e5ccdd7
