/** This file is automatically generated! Do not edit. */ (function(pathindex) { /*
 * This file is part of MyDMAM.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * Copyright (C) hdsdi3g for hd3g.tv 2015
 * 
*/

pathindex.react2lines = React.createClass({displayName: "react2lines",
	shouldComponentUpdate: function(nextProps, nextState) {
		if (nextProps.externalpos.positions) {
			if (nextProps.externalpos.positions[nextProps.result.key]) {
				return true;
			}
		}

		if (nextProps.stat == null) {
			return false;
		}

		return true;
	},
	render: function() {
		var url_navigate = mydmam.metadatas.url.navigate_react;
		
		var result = this.props.result;
		var directory_block = null;
		if (result.content.directory) {
			directory_block = (React.createElement("span", {className: "label label-success", style: {marginLeft: 5}}, i18n("search.result.directory")));
		}

		var path_linked = [];
		var sub_paths = result.content.path.split("/");
		var sub_path;
		var currentpath = "";
		for (var i = 1; i < sub_paths.length; i++) {
			sub_path = sub_paths[i];
			path_linked.push(
				React.createElement("span", {key: i}, "/", 
					React.createElement("a", {href: url_navigate + "#" + result.content.storagename + ':' + currentpath + "/" + sub_path}, 
						sub_path
					)
				)
			);
			currentpath = currentpath + "/" + sub_path;
		};


		return (
			React.createElement("div", {className: "pathindex"}, 
				React.createElement("span", {className: "label label-inverse"}, i18n("search.result.storage")), 
				React.createElement("span", {className: "label label-info", style: {marginLeft: 5}}, result.content.id), 
				React.createElement(pathindex.reactDate, {date: result.content.date}), 
				React.createElement(pathindex.reactFileSize, {size: result.content.size}), 
				directory_block, 
				React.createElement(pathindex.reactMetadata1Line, {stat: this.props.stat}), 
				React.createElement("br", null), 
				React.createElement("span", null, 
					React.createElement(pathindex.reactBasketButton, {pathindexkey: this.props.result.key}), 
					React.createElement(pathindex.reactExternalPosition, {pathindexkey: this.props.result.key, externalpos: this.props.externalpos}), " ", 
					React.createElement("strong", {className: "storagename"}, 
						React.createElement("a", {href: url_navigate + "#" + result.content.storagename + ":/"}, 
							result.content.storagename
						)
					), 
					" :: ", 
					React.createElement("span", {className: "path"}, 
						path_linked
					)
				)
			)
		);
	}
});
})(window.mydmam.async.pathindex);
// Generated by hd3gtv.mydmam.web.JSProcessor for the module internal
// Source hash: a4f90f37554cb484feaec06408a09545
