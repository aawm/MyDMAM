/** This file is automatically generated! Do not edit. */ (function(manager) { /*
 * This file is part of MyDMAM.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * Copyright (C) hdsdi3g for hd3g.tv 2015
 * 
*/

manager.Summaries = React.createClass({displayName: "Summaries",
	getInitialState: function() {
		return {
			list: {},
			interval: null,
		};
	},
	componentWillMount: function() {
		this.refresh();
	},
	refresh: function() {
		mydmam.async.request("instances", "allsummaries", null, function(list) {
			this.setState({list: list});
		}.bind(this));
	},
	componentDidMount: function(){
		this.setState({interval: setInterval(this.refresh, 10000)});
	},
	componentWillUnmount: function() {
		if (this.state.interval) {
			clearInterval(this.state.interval);
		}
	},
	render: function() {
		var items = [];
		for (var instance_ref in this.state.list) {
			items.push(React.createElement(manager.InstanceSummary, {key: instance_ref, instance: this.state.list[instance_ref]}));
		}
		return (
			React.createElement("table", {className: "table table-bordered table-striped table-condensed"}, 
				React.createElement("thead", null, 
					React.createElement("tr", null, 
						React.createElement("th", null, i18n("manager.instance.host")), 
						React.createElement("th", null, i18n("manager.instance.manager")), 
						React.createElement("th", null, i18n("manager.instance.version")), 
						React.createElement("th", null, i18n("manager.instance.uptime")), 
						React.createElement("th", null, i18n("manager.instance.jvm")), 
						React.createElement("th", null, i18n("manager.instance.addr")), 
						React.createElement("th", null, i18n("manager.instance.os")), 
						React.createElement("th", null, i18n("manager.instance.user"))
					)
				), 
				React.createElement("tbody", null, 
					items
				)
			)
		);
	},
});

manager.InstanceSummary = React.createClass({displayName: "InstanceSummary",
	render: function() {

		var addr = [];
		for (var pos in this.props.instance.host_addresses) {
			addr.push(React.createElement("span", {key: pos}, "• ", this.props.instance.host_addresses[pos], React.createElement("br", null)));
		}

		var arch = null;
		if (this.props.instance.os_arch != "x86_64") {
			arch = this.props.instance.os_arch;
		}

		return (React.createElement("tr", null, 
			React.createElement("td", null, this.props.instance.host_name, React.createElement("br", null), 
				React.createElement("small", {className: "muted"}, "PID ", this.props.instance.pid)
			), 
			React.createElement("td", null, 
				this.props.instance.instance_name, React.createElement("br", null), 
				this.props.instance.app_name
			), 
			React.createElement("td", null, 
				this.props.instance.app_version
			), 
			React.createElement("td", null, 
				React.createElement(mydmam.async.pathindex.reactSinceDate, {i18nlabel: "manager.instance.uptime", date: this.props.instance.starttime})
			), 
			React.createElement("td", null, 
				this.props.instance.java_version, React.createElement("br", null), 
				React.createElement("small", {className: "muted"}, 
					this.props.instance.java_vendor
				)
			), 
			React.createElement("td", null, addr), 
			React.createElement("td", null, 
				React.createElement("small", null, 
					this.props.instance.os_name, React.createElement("br", null), 
					this.props.instance.os_version, " ", arch
				)
			), 
			React.createElement("td", null, 
				React.createElement("small", null, 
					this.props.instance.user_name, " • ", this.props.instance.user_language, "_", this.props.instance.user_country, React.createElement("br", null), 
					this.props.instance.user_timezone
				)
			)
		));
	},
});


})(window.mydmam.async.manager);
// Generated by hd3gtv.mydmam.web.JSProcessor for the module internal
// Source hash: f44bdfceabaef81a1ee73aa07a6fac32
